{"remainingRequest":"/home/gustavo/Dev/Seed/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/gustavo/Dev/Seed/frontend/src/components/buttons/btn-general.vue?vue&type=style&index=0&id=275ddaee&scoped=true&lang=scss&","dependencies":[{"path":"/home/gustavo/Dev/Seed/frontend/src/components/buttons/btn-general.vue","mtime":1612480834666},{"path":"/home/gustavo/Dev/Seed/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gustavo/Dev/Seed/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/gustavo/Dev/Seed/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/gustavo/Dev/Seed/frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gustavo/Dev/Seed/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/gustavo/Dev/Seed/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkB1c2UgIkAvY3NzL21vZHVsZXMvX3R5cG9ncmFwaHkuc2NzcyI7CkBpbXBvcnQgIkAvY3NzL2dsb2JhbC5zY3NzIjsKCnB7CiAgICBmb250LWZhbWlseTogIkxhdG8iOwogICAgZm9udC13ZWlnaHQ6IDgwMDsKICAgIGZvbnQtc2l6ZTogMTVwdDsKICAgIG1hcmdpbi1ib3R0b206IC0xNnB4OwogICAgY29sb3I6IHdoaXRlOwp9CgouYnRuewogICAgZm9udC1mYW1pbHk6ICdMYXRvJzsKICAgIGZvbnQtd2VpZ2h0OiA4MDA7CiAgICBmb250LXNpemU6IDEzcHQ7Cn0KCi5pY29uewogICAgdmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tOwp9Cg=="},{"version":3,"sources":["btn-general.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"btn-general.vue","sourceRoot":"src/components/buttons","sourcesContent":["<template>\n    <v-btn\n        color='primary'\n        light\n        tile\n\n        :to='_to'\n\n        v-bind='btnProps'\n\n        :x-large='xlarge'\n        :icon='icon'\n        @click='click'\n    >\n        <p\n            :v-if='title != null'\n            class='ma-0'\n        >\n            {{title}}\n        </p>\n        <span class='btn'>\n            <slot />\n        </span>\n        <slot class='icon' name='icon' />\n    </v-btn>\n</template>\n\n<script>\n    export default {\n        name: 'GButton',\n        props: {\n            onClick: {\n                type: Function,\n                default: (e) => {\n                    this.$emit('click', e)\n                }\n            },\n            icon: {\n                type: Boolean,\n                default: false\n            },\n            title: {\n                type: String,\n                default: null,\n            },\n            type: {\n                type: String,\n                default: 'primary',\n            },\n            _to: {\n                type: Object,\n                default: undefined,\n            },\n            xlarge: {\n                type: Boolean,\n                default: false\n            },\n        },\n        computed: {\n            primary: function () {\n                return this.type === 'main';\n            },\n            secundary: function () {\n                return this.type === 'secundary';\n            },\n            text: function () {\n                return this.type === 'text';\n            },\n            btnProps: function () {\n                if(this.icon){\n                    return {\n                        icon: true,\n                    }\n                }\n                if(this.type === 'text'){\n                    return {\n                        text: true,\n                        large: true,\n                        block: false,\n                    }\n                } else if(this.type === 'secundary') {\n                    return {\n                        text: true,\n                        large: true,\n                        elevation: '7',\n                    }\n                }\n                return {\n                    elevation: '7',\n                    block: true,\n                }\n            }\n\n        },\n        methods: {\n            click: function (e) {\n                this.$emit('click', e)\n            },\n        }\n    }\n</script>\n\n<style scoped lang=\"scss\">\n@use \"@/css/modules/_typography.scss\";\n@import \"@/css/global.scss\";\n\np{\n    font-family: \"Lato\";\n    font-weight: 800;\n    font-size: 15pt;\n    margin-bottom: -16px;\n    color: white;\n}\n\n.btn{\n    font-family: 'Lato';\n    font-weight: 800;\n    font-size: 13pt;\n}\n\n.icon{\n    vertical-align: text-bottom;\n}\n</style>\n"]}]}